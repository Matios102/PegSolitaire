# Peg Solitaire Solver

## Game Description
Peg Solitaire is a board game for one player involving movement of pegs on a board with holes. The goal is to empty the entire board except for a single peg, usually by jumping pegs over each other and removing the jumped peg, similar to checkers.

## Solutions
This project provides three solutions to solve the Peg Solitaire game:
1. **GPU Solution**: Utilizes CUDA to parallelize the solution process, making it faster for large board sizes.
2. **CPU DFS Solution**: Uses Depth-First Search (DFS) to explore all possible moves and find a solution.
3. **CPU BFS Solution**: Uses Breadth-First Search (BFS) to explore all possible moves and find a solution.

## Files
- `solution.cu`: Contains the GPU solution.
- `solution_dfs.cpp`: Contains the CPU DFS solution.
- `solution_bfs.cpp`: Contains the CPU BFS solution.
- `validator.cpp`: Validates the solutions generated by the GPU and CPU solvers.
- `initial_board.cpp`: Generates the initial board configuration.
- `Makefile`: Automates the build and run process for the solutions and validator.

## Instructions

### Build and Run
1. **Build the Validator**
    ```sh
    make validator
    ```
    This command compiles the `validator.cpp` file and generates an executable named `validator`.

2. **Run the Validator**
    ```sh
    make run_validator
    ```
    This command runs the `validator` executable to validate the solutions generated by the GPU and CPU solvers.

3. **Build the Initial Board Generator**
    ```sh
    make initial_board
    ```
    This command compiles the `initial_board.cpp` file and generates an executable named `initial_board`.

4. **Run the Initial Board Generator**
    ```sh
    make run_initial_board
    ```
    This command runs the `initial_board` executable to generate the initial board configuration.

5. **Build the CPU Solver**
    ```sh
    make cpu
    ```
    This command compiles the `solution_dfs.cpp` file and generates an executable named `cpu_solver`.

6. **Run the CPU Solver**
    ```sh
    make run_cpu
    ```
    This command runs the `cpu_solver` executable to solve the Peg Solitaire game using the CPU DFS solution.

7. **Build the GPU Solver**
    ```sh
    make gpu
    ```
    This command compiles the `solution.cu` file using the `nvcc` compiler and generates an executable named `gpu_solver`.

8. **Run the GPU Solver**
    ```sh
    make run_gpu
    ```
    This command runs the `gpu_solver` executable to solve the Peg Solitaire game using the GPU solution.

### Clean
To clean up the build files, run:
```sh
make clean
```
This command removes the generated executables and any intermediate build files.

## Notes
- Ensure you have CUDA installed and properly configured to run the GPU solution.
- The initial board configuration is saved in `initial_board.txt`.
- The solutions and their hashes are saved in `cpu_solution.txt` and `gpu_solution.txt` respectively.
